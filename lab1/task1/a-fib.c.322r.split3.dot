digraph "a-fib.c.322r.split3" {
overlap=false;
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118111600\ \ \ \ 8:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ 10:\ NOTE_INSN_DELETED\l\
|\ \ \ 12:\ NOTE_INSN_DELETED\l\
|\ \ 107:\ sp:DI=sp:DI-0x40\l\
|\ \ 108:\ \{[sp:DI+0x10]=x29:DI;[sp:DI+0x18]=x30:DI;\}\l\
\ \ \ \ \ \ REG_DEAD\ x30:DI\l\
\ \ \ \ \ \ REG_DEAD\ x29:DI\l\
|\ \ 109:\ x29:DI=sp:DI+0x10\l\
|\ \ 110:\ [scratch]=unspec[sp:DI,x29:DI]\ 64\l\
\ \ \ \ \ \ REG_DEAD\ x29:DI\l\
|\ \ 111:\ \{[sp:DI+0x30]=x21:DI;[sp:DI+0x38]=x22:DI;\}\l\
\ \ \ \ \ \ REG_DEAD\ x22:DI\l\
\ \ \ \ \ \ REG_DEAD\ x21:DI\l\
|\ \ \ \ 3:\ x2:DI=const(unspec[`__stack_chk_guard',0]\ 163)\l\
\ \ \ \ \ \ REG_EQUIV\ const(unspec[`__stack_chk_guard',0]\ 163)\l\
|\ \ \ 11:\ x0:DI=high(`*.LC0')\l\
\ \ \ \ \ \ REG_EQUIV\ high(`*.LC0')\l\
|\ \ \ 13:\ x1:DI=sp:DI+0x4\l\
|\ \ \ 14:\ x0:DI=x0:DI+low(`*.LC0')\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ \ \ 4:\ \{[sp:DI+0x8]=unspec[[x2:DI]]\ 100;x3:DI=0;\}\l\
\ \ \ \ \ \ REG_DEAD\ x2:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x3:DI\l\
|\ \ \ 15:\ x0:SI=call\ [`*__isoc99_scanf']\ argc:0\l\
\ \ \ \ \ \ REG_DEAD\ x1:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x0:SI\l\
\ \ \ \ \ \ REG_CALL_DECL\ `*__isoc99_scanf'\l\
|\ \ \ 16:\ x22:DI=high(`*.LC1')\l\
\ \ \ \ \ \ REG_EQUIV\ high(`*.LC1')\l\
|\ \ \ 17:\ x22:DI=x22:DI+low(`*.LC1')\l\
\ \ \ \ \ \ REG_EQUIV\ `*.LC1'\l\
|\ \ \ 19:\ x1:DI=x22:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC1'\l\
|\ \ \ 18:\ x2:SI=0\l\
|\ \ \ 20:\ x0:SI=0x2\l\
|\ \ \ 21:\ x0:SI=call\ [`__printf_chk']\ argc:0\l\
\ \ \ \ \ \ REG_DEAD\ x2:SI\l\
\ \ \ \ \ \ REG_DEAD\ x1:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x0:SI\l\
\ \ \ \ \ \ REG_CALL_DECL\ `__printf_chk'\l\
|\ \ \ 24:\ x2:SI=0x1\l\
|\ \ \ 25:\ x1:DI=x22:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC1'\l\
|\ \ \ 26:\ x0:SI=0x2\l\
|\ \ \ 27:\ x0:SI=call\ [`__printf_chk']\ argc:0\l\
\ \ \ \ \ \ REG_DEAD\ x2:SI\l\
\ \ \ \ \ \ REG_DEAD\ x1:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x0:SI\l\
\ \ \ \ \ \ REG_CALL_DECL\ `__printf_chk'\l\
|\ \ \ 30:\ x0:DI=zero_extend([sp:DI+0x4])\l\
\ \ \ \ \ \ REG_EQUIV\ [sfp:DI-0xc]\l\
|\ \ \ 31:\ cc:CC=cmp(x0:SI,0x1)\l\
\ \ \ \ \ \ REG_DEAD\ x0:SI\l\
|\ \ \ 32:\ pc=\{(cc:CC\<=0)?L48:pc\}\l\
\ \ \ \ \ \ REG_DEAD\ cc:CC\l\
\ \ \ \ \ \ REG_BR_PROB\ 118111604\l\
}"];

	fn_23_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:105119324\ \ \ 63:\ NOTE_INSN_BASIC_BLOCK\ 3\l\
|\ \ 103:\ \{[sp:DI+0x20]=x19:DI;[sp:DI+0x28]=x20:DI;\}\l\
\ \ \ \ \ \ REG_DEAD\ x20:DI\l\
\ \ \ \ \ \ REG_DEAD\ x19:DI\l\
\ \ \ \ \ \ REG_CFA_OFFSET\ [sp:DI+0x28]=x20:DI\l\
\ \ \ \ \ \ REG_CFA_OFFSET\ [sp:DI+0x20]=x19:DI\l\
|\ \ \ \ 5:\ x20:SI=0x1\l\
\ \ \ \ \ \ REG_EQUAL\ 0x1\l\
|\ \ \ \ 6:\ x19:SI=x20:SI\l\
\ \ \ \ \ \ REG_EQUAL\ 0x1\l\
|\ \ \ \ 7:\ x0:SI=0\l\
\ \ \ \ \ \ REG_EQUAL\ 0\l\
}"];

	fn_23_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:955630225\ \ \ 44:\ L44:\l\
|\ \ \ 33:\ NOTE_INSN_BASIC_BLOCK\ 4\l\
|\ \ \ 34:\ x21:SI=x19:SI\l\
|\ \ \ 35:\ x19:SI=x19:SI+x0:SI\l\
\ \ \ \ \ \ REG_DEAD\ x0:SI\l\
|\ \ \ 38:\ x2:SI=x19:SI\l\
|\ \ \ 39:\ x1:DI=x22:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC1'\l\
|\ \ \ 82:\ x0:SI=0x2\l\
|\ \ \ 41:\ x0:SI=call\ [`__printf_chk']\ argc:0\l\
\ \ \ \ \ \ REG_DEAD\ x2:SI\l\
\ \ \ \ \ \ REG_DEAD\ x1:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x0:SI\l\
\ \ \ \ \ \ REG_CALL_DECL\ `__printf_chk'\l\
|\ \ \ 42:\ x20:SI=x20:SI+0x1\l\
|\ \ \ 43:\ x0:SI=x21:SI\l\
\ \ \ \ \ \ REG_DEAD\ x21:SI\l\
|\ \ \ 45:\ x1:DI=zero_extend([sp:DI+0x4])\l\
\ \ \ \ \ \ REG_EQUIV\ [sfp:DI-0xc]\l\
|\ \ \ 46:\ cc:CC=cmp(x1:SI,x20:SI)\l\
\ \ \ \ \ \ REG_DEAD\ x1:SI\l\
|\ \ \ 47:\ pc=\{(cc:CC\>0)?L44:pc\}\l\
\ \ \ \ \ \ REG_DEAD\ cc:CC\l\
\ \ \ \ \ \ REG_BR_PROB\ 955630228\l\
}"];

	fn_23_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:105119324\ \ 106:\ NOTE_INSN_BASIC_BLOCK\ 5\l\
|\ \ 105:\ \{x19:DI=[sp:DI+0x20];x20:DI=[sp:DI+0x28];\}\l\
\ \ \ \ \ \ REG_CFA_RESTORE\ x20:DI\l\
\ \ \ \ \ \ REG_CFA_RESTORE\ x19:DI\l\
}"];

	fn_23_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118111600\ \ \ 48:\ L48:\l\
|\ \ \ 49:\ NOTE_INSN_BASIC_BLOCK\ 6\l\
|\ \ \ 54:\ x0:DI=const(unspec[`__stack_chk_guard',0x1]\ 163)\l\
\ \ \ \ \ \ REG_EQUIV\ const(unspec[`__stack_chk_guard',0x1]\ 163)\l\
|\ \ \ 55:\ \{cc:CC=unspec[[sp:DI+0x8],[x0:DI]]\ 101;clobber\ x2:DI;clobber\ x1:DI;\}\l\
\ \ \ \ \ \ REG_DEAD\ x0:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x2:DI\l\
\ \ \ \ \ \ REG_UNUSED\ x1:DI\l\
|\ \ \ 56:\ pc=\{(cc:CC!=0)?L124:pc\}\l\
\ \ \ \ \ \ REG_DEAD\ cc:CC\l\
\ \ \ \ \ \ REG_BR_PROB\ 429500\l\
}"];

	fn_23_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:47245\ \ 124:\ L124:\l\
|\ \ \ 64:\ NOTE_INSN_BASIC_BLOCK\ 8\l\
|\ \ 104:\ \{[sp:DI+0x20]=x19:DI;[sp:DI+0x28]=x20:DI;\}\l\
\ \ \ \ \ \ REG_DEAD\ x20:DI\l\
\ \ \ \ \ \ REG_DEAD\ x19:DI\l\
\ \ \ \ \ \ REG_CFA_OFFSET\ [sp:DI+0x28]=x20:DI\l\
\ \ \ \ \ \ REG_CFA_OFFSET\ [sp:DI+0x20]=x19:DI\l\
|\ \ 112:\ NOTE_INSN_PROLOGUE_END\l\
|\ \ \ 57:\ call\ [`__stack_chk_fail']\ argc:0\l\
\ \ \ \ \ \ REG_CALL_DECL\ `__stack_chk_fail'\l\
\ \ \ \ \ \ REG_NORETURN\ 0\l\
\ \ \ \ \ \ REG_EH_REGION\ 0\l\
}"];

	fn_23_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118064355\ \ \ 65:\ NOTE_INSN_BASIC_BLOCK\ 7\l\
|\ \ \ 60:\ x0:SI=0\l\
|\ \ \ 61:\ use\ x0:SI\l\
|\ \ 123:\ NOTE_INSN_EPILOGUE_BEG\l\
|\ \ 114:\ \{x21:DI=[sp:DI+0x30];x22:DI=[sp:DI+0x38];\}\l\
|\ \ 115:\ \{x29:DI=[sp:DI+0x10];x30:DI=[sp:DI+0x18];\}\l\
|\ \ 116:\ [scratch]=unspec[sp:DI,sp:DI]\ 64\l\
|\ \ 117:\ sp:DI=sp:DI+0x40\l\
\ \ \ \ \ \ REG_CFA_DEF_CFA\ sp:DI\l\
\ \ \ \ \ \ REG_CFA_RESTORE\ x29:DI\l\
\ \ \ \ \ \ REG_CFA_RESTORE\ x30:DI\l\
\ \ \ \ \ \ REG_CFA_RESTORE\ x21:DI\l\
\ \ \ \ \ \ REG_CFA_RESTORE\ x22:DI\l\
|\ \ 118:\ use\ x30:DI\l\
|\ \ 119:\ return\l\
}"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=black,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_2:s -> fn_23_basic_block_3:n [style="solid,bold",color=black,weight=100,constraint=true,label="[89%]"];
	fn_23_basic_block_2:s -> fn_23_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true,label="[11%]"];
	fn_23_basic_block_3:s -> fn_23_basic_block_4:n [style="solid,bold",color=black,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_4:s -> fn_23_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false,label="[89%]"];
	fn_23_basic_block_4:s -> fn_23_basic_block_5:n [style="solid,bold",color=black,weight=100,constraint=true,label="[11%]"];
	fn_23_basic_block_5:s -> fn_23_basic_block_6:n [style="solid,bold",color=black,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_6:s -> fn_23_basic_block_7:n [style="solid,bold",color=black,weight=100,constraint=true,label="[99%]"];
	fn_23_basic_block_6:s -> fn_23_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_23_basic_block_7:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
}
