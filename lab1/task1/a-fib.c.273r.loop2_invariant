
;; Function main (main, funcdef_no=23, decl_uid=5027, cgraph_uid=24, symbol_order=23) (executed once)

*****starting processing of loop 1 ******
setting blocks to analyze 4, 8
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 2 ( 0.22)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 2 ( 0.22)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 3 ( 0.33)


starting region dump


main

Dataflow summary:
def_info->table_size = 76, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap] 68 [p0] 69 [p1] 70 [p2] 71 [p3]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 2 [x2] 16 [x16] 17 [x17] 30 [x30] 31 [sp] 66 [cc]
;;  ref usage 	r0={11d,6u} r1={10d,4u} r2={9d,3u} r3={6d} r4={6d} r5={6d} r6={6d} r7={6d} r8={6d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={10d} r17={10d} r18={5d} r29={1d,8u} r30={6d} r31={1d,13u} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,13u,1e} r65={1d,7u} r66={8d,3u} r67={5d} r68={6d} r69={6d} r70={6d} r71={6d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r93={1d,1u} r94={2d,3u} r95={2d,3u} r97={2d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,2u} r107={1d,1u} r108={1d,1u} r110={1d,1u} r112={1d,1u} r113={1d,2u} 
;;    total ref usage 466{388d,77u,1e} in 42{37 regular + 5 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 3[6,6] 4[7,7] 5[8,8] 6[9,9] 7[10,10] 8[11,11] 9[12,12] 10[13,13] 11[14,14] 12[15,15] 13[16,16] 14[17,17] 15[18,18] 16[19,20] 17[21,22] 18[23,23] 30[24,24] 32[25,25] 33[26,26] 34[27,27] 35[28,28] 36[29,29] 37[30,30] 38[31,31] 39[32,32] 48[33,33] 49[34,34] 50[35,35] 51[36,36] 52[37,37] 53[38,38] 54[39,39] 55[40,40] 56[41,41] 57[42,42] 58[43,43] 59[44,44] 60[45,45] 61[46,46] 62[47,47] 63[48,48] 66[49,50] 67[51,51] 68[52,52] 69[53,53] 70[54,54] 71[55,55] 72[56,56] 73[57,57] 74[58,58] 75[59,59] 76[60,60] 77[61,61] 78[62,62] 79[63,63] 80[64,64] 81[65,65] 82[66,66] 83[67,67] 84[68,68] 85[69,69] 93[70,70] 94[71,71] 95[72,72] 97[73,73] 108[74,74] 110[75,75] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 95 97 113
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 95 97 113
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt] 93 94 95 97 108 110
;; live  in  	 94 95 97
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 93 94 95 97 108 110
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(3) 94[71],95[72],97[73]
;; rd  gen 	(8) 0[1],66[50],93[70],94[71],95[72],97[73],108[74],110[75]
;; rd  kill	(11) 0[0,1],30[24],66[49,50],93[70],94[71],95[72],97[73],108[74],110[75]
;;  UD chains for artificial uses at top

(code_label 44 7 33 4 3 (nil) [0 uses])
(note 33 44 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 34
;;      reg 94 { d71(bb 4 insn 35) }
(insn 34 33 35 4 (set (reg/v:SI 93 [ b ])
        (reg/v:SI 94 [ b ])) 64 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 35
;;      reg 94 { d71(bb 4 insn 35) }
;;      reg 97 { d73(bb 4 insn 43) }
(insn 35 34 37 4 (set (reg/v:SI 94 [ b ])
        (plus:SI (reg/v:SI 94 [ b ])
            (reg/v:SI 97 [ a ]))) "fib.c":17:11 156 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 97 [ a ])
        (nil)))
;;   UD chains for insn luid 2 uid 37
;;      reg 113 { }
(insn 37 35 38 4 (set (reg/f:DI 108)
        (lo_sum:DI (reg/f:DI 113)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 1116 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
;;   UD chains for insn luid 3 uid 38
;;      reg 94 { d71(bb 4 insn 35) }
(insn 38 37 39 4 (set (reg:SI 2 x2)
        (reg/v:SI 94 [ b ])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 39
;;      reg 108 { d74(bb 4 insn 37) }
(insn 39 38 40 4 (set (reg:DI 1 x1)
        (reg/f:DI 108)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
            (nil))))
;;   UD chains for insn luid 5 uid 40
(insn 40 39 41 4 (set (reg:SI 0 x0)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 41
;;      reg 31 { }
;;      reg 0 { d0(bb 4 insn 40) }
;;      reg 1 { d2(bb 4 insn 39) }
;;      reg 2 { d4(bb 4 insn 38) }
(call_insn 41 40 42 4 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 7 uid 42
;;      reg 95 { d72(bb 4 insn 42) }
(insn 42 41 43 4 (set (reg/v:SI 95 [ i ])
        (plus:SI (reg/v:SI 95 [ i ])
            (const_int 1 [0x1]))) "fib.c":20:11 156 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 43
;;      reg 93 { d70(bb 4 insn 34) }
(insn 43 42 45 4 (set (reg/v:SI 97 [ a ])
        (reg/v:SI 93 [ b ])) 64 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 93 [ b ])
        (nil)))
;;   UD chains for insn luid 9 uid 45
;;      reg 64 { }
(insn 45 43 46 4 (set (reg:SI 110 [ n ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "fib.c":15:14 64 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 46
;;      reg 95 { d72(bb 4 insn 42) }
;;      reg 110 { d75(bb 4 insn 45) }
(insn 46 45 47 4 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 110 [ n ])
            (reg/v:SI 95 [ i ]))) "fib.c":15:14 441 {cmpsi}
     (expr_list:REG_DEAD (reg:SI 110 [ n ])
        (nil)))
;;   UD chains for insn luid 11 uid 47
;;      reg 66 { d50(bb 4 insn 46) }
(jump_insn 47 46 81 4 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) "fib.c":15:14 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 81)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 95 97 113
;; live  out 	 94 95 97
;; rd  out 	(3) 94[71],95[72],97[73]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 95 97 113
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 94 95 97
;; live  gen 	
;; live  kill	
;; rd  in  	(8) 0[1],66[50],93[70],94[71],95[72],97[73],108[74],110[75]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 81 47 80 8 5 (nil) [1 uses])
(note 80 81 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 95 97 113
;; live  out 	 94 95 97
;; rd  out 	(3) 94[71],95[72],97[73]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 1 ******
Set in insn 37 is invariant (0), cost 4, depends on 
Set in insn 39 is invariant (1), cost 0, depends on 0
Set in insn 40 is invariant (2), cost 4, depends on 
Decided to move invariant 0 -- gain 4
Decided to move invariant 2 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 37
  from 4 to 3
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 82.
changing bb of uid 40
  from 4 to 3
starting the processing of deferred insns
rescanning insn with uid = 40.
rescanning insn with uid = 82.
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap] 68 [p0] 69 [p1] 70 [p2] 71 [p3]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 2 [x2] 16 [x16] 17 [x17] 30 [x30] 31 [sp] 66 [cc]
;;  ref usage 	r0={11d,6u} r1={10d,4u} r2={9d,3u} r3={6d} r4={6d} r5={6d} r6={6d} r7={6d} r8={6d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={10d} r17={10d} r18={5d} r29={1d,8u} r30={6d} r31={1d,13u} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,13u,1e} r65={1d,7u} r66={8d,3u} r67={5d} r68={6d} r69={6d} r70={6d} r71={6d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r93={1d,1u} r94={2d,3u} r95={2d,3u} r97={2d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,2u} r107={1d,1u} r108={1d,1u} r110={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} 
;;    total ref usage 468{389d,78u,1e} in 43{38 regular + 5 call} insns.
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 4 2 (set (reg/f:DI 99)
        (const:DI (unspec:DI [
                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x7749fe9ccb40 __stack_chk_guard>)
                    (const_int 0 [0])
                ] UNSPEC_SALT_ADDR))) "fib.c":7:12 65 {*movdi_aarch64}
     (nil))
(insn 4 3 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.5063+0 S8 A64])
                (unspec:DI [
                        (mem:DI (reg/f:DI 99) [0  S8 A8])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
        ]) "fib.c":7:12 1162 {stack_protect_set_di}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 10 4 11 2 (set (reg/f:DI 100)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -12 [0xfffffffffffffff4]))) "fib.c":12:5 157 {*adddi3_aarch64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 102)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>))) "fib.c":12:5 65 {*movdi_aarch64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 101)
        (lo_sum:DI (reg/f:DI 102)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>))) "fib.c":12:5 1116 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>)
            (nil))))
(insn 13 12 14 2 (set (reg:DI 1 x1)
        (reg/f:DI 100)) "fib.c":12:5 65 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 0 x0)
        (reg/f:DI 101)) "fib.c":12:5 65 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>)
            (nil))))
(call_insn 15 14 16 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7749feb2b000 scanf>) [0 __builtin_scanf S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "fib.c":12:5 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7749feb2b000 scanf>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 16 15 17 2 (set (reg/f:DI 113)
        (high:DI (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 103)
        (lo_sum:DI (reg/f:DI 113)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 1116 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
(insn 18 17 19 2 (set (reg:SI 2 x2)
        (const_int 0 [0])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 x1)
        (reg/f:DI 103)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 0 x0)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(call_insn 21 20 24 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 24 21 25 2 (set (reg:SI 2 x2)
        (const_int 1 [0x1])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(insn 25 24 26 2 (set (reg:DI 1 x1)
        (reg/f:DI 103)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 0 x0)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(call_insn 27 26 30 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 30 27 31 2 (set (reg:SI 107 [ n ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "fib.c":15:14 64 {*movsi_aarch64}
     (nil))
(insn 31 30 32 2 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 107 [ n ])
            (const_int 1 [0x1]))) "fib.c":15:14 441 {cmpsi}
     (expr_list:REG_DEAD (reg:SI 107 [ n ])
        (nil)))
(jump_insn 32 31 63 2 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "fib.c":15:14 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 48)
(note 63 32 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 63 6 3 (set (reg/v:SI 95 [ i ])
        (const_int 1 [0x1])) "fib.c":11:7 64 {*movsi_aarch64}
     (nil))
(insn 6 5 7 3 (set (reg/v:SI 94 [ b ])
        (reg/v:SI 95 [ i ])) "fib.c":10:7 64 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 37 3 (set (reg/v:SI 97 [ a ])
        (const_int 0 [0])) "fib.c":9:7 64 {*movsi_aarch64}
     (nil))
(insn 37 7 40 3 (set (reg/f:DI 108)
        (lo_sum:DI (reg/f:DI 113)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 1116 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
(insn 40 37 44 3 (set (reg:SI 114)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(code_label 44 40 33 4 3 (nil) [0 uses])
(note 33 44 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg/v:SI 93 [ b ])
        (reg/v:SI 94 [ b ])) 64 {*movsi_aarch64}
     (nil))
(insn 35 34 38 4 (set (reg/v:SI 94 [ b ])
        (plus:SI (reg/v:SI 94 [ b ])
            (reg/v:SI 97 [ a ]))) "fib.c":17:11 156 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 97 [ a ])
        (nil)))
(insn 38 35 39 4 (set (reg:SI 2 x2)
        (reg/v:SI 94 [ b ])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(insn 39 38 82 4 (set (reg:DI 1 x1)
        (reg/f:DI 108)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
            (nil))))
(insn 82 39 41 4 (set (reg:SI 0 x0)
        (reg:SI 114)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 -1
     (nil))
(call_insn 41 82 42 4 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 42 41 43 4 (set (reg/v:SI 95 [ i ])
        (plus:SI (reg/v:SI 95 [ i ])
            (const_int 1 [0x1]))) "fib.c":20:11 156 {*addsi3_aarch64}
     (nil))
(insn 43 42 45 4 (set (reg/v:SI 97 [ a ])
        (reg/v:SI 93 [ b ])) 64 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 93 [ b ])
        (nil)))
(insn 45 43 46 4 (set (reg:SI 110 [ n ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "fib.c":15:14 64 {*movsi_aarch64}
     (nil))
(insn 46 45 47 4 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 110 [ n ])
            (reg/v:SI 95 [ i ]))) "fib.c":15:14 441 {cmpsi}
     (expr_list:REG_DEAD (reg:SI 110 [ n ])
        (nil)))
(jump_insn 47 46 81 4 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) "fib.c":15:14 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 81)
      ; pc falls through to BB 5
(code_label 81 47 80 8 5 (nil) [1 uses])
(note 80 81 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
      ; pc falls through to BB 4
(code_label 48 80 49 5 2 (nil) [1 uses])
(note 49 48 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 49 55 5 (set (reg/f:DI 112)
        (const:DI (unspec:DI [
                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x7749fe9ccb40 __stack_chk_guard>)
                    (const_int 1 [0x1])
                ] UNSPEC_SALT_ADDR))) "fib.c":23:1 65 {*movdi_aarch64}
     (nil))
(insn 55 54 56 5 (parallel [
            (set (reg:CC 66 cc)
                (unspec:CC [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.5063+0 S8 A64])
                        (mem:DI (reg/f:DI 112) [0  S8 A8])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
        ]) "fib.c":23:1 1164 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(jump_insn 56 55 64 5 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "fib.c":23:1 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 59)
(note 64 56 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 57 64 59 6 (parallel [
            (call (mem:DI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7749fe9c8e00 __stack_chk_fail>) [0 __stack_chk_fail S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "fib.c":23:1 58 {*call_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7749fe9c8e00 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(code_label 59 57 65 7 4 (nil) [1 uses])
(note 65 59 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 65 61 7 (set (reg/i:SI 0 x0)
        (const_int 0 [0])) "fib.c":23:1 64 {*movsi_aarch64}
     (nil))
(insn 61 60 0 7 (use (reg/i:SI 0 x0)) "fib.c":23:1 -1
     (nil))
