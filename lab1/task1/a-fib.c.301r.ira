
;; Function main (main, funcdef_no=23, decl_uid=5027, cgraph_uid=24, symbol_order=23) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Removing SCRATCH to p115 in insn #4 (nop 2)
rescanning insn with uid = 4.
Removing SCRATCH to p116 in insn #55 (nop 2)
Removing SCRATCH to p117 in insn #55 (nop 3)
rescanning insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
Reg 99: local to bb 2 def dominates all uses has unique first use
Reg 102: local to bb 2 def dominates all uses has unique first use
Reg 115 uninteresting (no unique first use)
Reg 113 uninteresting
Reg 103 uninteresting
Ignoring reg 107, has equiv memory
Reg 93: local to bb 4 def dominates all uses has unique first use
Ignoring reg 110, has equiv memory
Reg 112 uninteresting
Examining insn 34, def for 93
  all ok
Examining insn 3, def for 99
  all ok and transp
      Creating newreg=118 from oldreg=99
rescanning insn with uid = 3.
scanning new insn with uid = 84.
Ignoring reg 102 with equiv init insn
    New r118: setting preferred GENERAL_REGS, alternative NO_REGS
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
init_insns for 102: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 16 (nil))

Pass 1 for finding pseudo/allocno costs

    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a1(r116,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:550,550 FP_LO_REGS:550,550 FP_REGS:550,550 POINTER_AND_FP_REGS:550,550 MEM:440,440
  a2(r117,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:550,550 FP_LO_REGS:550,550 FP_REGS:550,550 POINTER_AND_FP_REGS:550,550 MEM:440,440
  a3(r97,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:485,9385 FP_LO_REGS:485,9385 FP_REGS:485,9385 POINTER_AND_FP_REGS:485,9385 MEM:388,7508
  a4(r94,l0) costs: GENERAL_REGS:0,890 FP_LO8_REGS:485,18285 FP_LO_REGS:485,18285 FP_REGS:485,18285 POINTER_AND_FP_REGS:485,18285 MEM:388,14628
  a5(r95,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:970,14320 FP_LO_REGS:970,14320 FP_REGS:970,14320 POINTER_AND_FP_REGS:970,14320 MEM:776,11456
  a6(r103,l0) costs: GENERAL_REGS:220,1110 FP_LO8_REGS:1650,6100 FP_LO_REGS:1650,6100 FP_REGS:1650,6100 POINTER_AND_FP_REGS:1650,6100 MEM:1320,4880
  a7(r107,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:0,0
  a8(r113,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a9(r99,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a10(r115,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:550,550 FP_LO_REGS:550,550 FP_REGS:550,550 POINTER_AND_FP_REGS:550,550 MEM:440,440
  a11(r118,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a12(r102,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a13(r94,l1) costs: GENERAL_REGS:890,890 FP_LO8_REGS:17800,17800 FP_LO_REGS:17800,17800 FP_REGS:17800,17800 POINTER_AND_FP_REGS:17800,17800 MEM:14240,14240
  a14(r95,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:13350,13350 FP_LO_REGS:13350,13350 FP_REGS:13350,13350 POINTER_AND_FP_REGS:13350,13350 MEM:10680,10680
  a15(r97,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:8900,8900 FP_LO_REGS:8900,8900 FP_REGS:8900,8900 POINTER_AND_FP_REGS:8900,8900 MEM:7120,7120
  a16(r103,l1) costs: GENERAL_REGS:890,890 FP_LO8_REGS:4450,4450 FP_LO_REGS:4450,4450 FP_REGS:4450,4450 POINTER_AND_FP_REGS:4450,4450 MEM:3560,3560
  a17(r110,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:8900,8900 FP_LO_REGS:8900,8900 FP_REGS:8900,8900 POINTER_AND_FP_REGS:8900,8900 MEM:0,0
  a18(r93,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:8900,8900 FP_LO_REGS:8900,8900 FP_REGS:8900,8900 POINTER_AND_FP_REGS:8900,8900 MEM:7120,7120

   Insn 61(l0): point = 0
   Insn 60(l0): point = 2
   Insn 57(l0): point = 5
   Insn 56(l0): point = 8
   Insn 55(l0): point = 10
   Insn 54(l0): point = 12
   Insn 7(l0): point = 15
   Insn 6(l0): point = 17
   Insn 5(l0): point = 19
   Insn 32(l0): point = 22
   Insn 31(l0): point = 24
   Insn 30(l0): point = 26
   Insn 27(l0): point = 28
   Insn 26(l0): point = 30
   Insn 25(l0): point = 32
   Insn 24(l0): point = 34
   Insn 21(l0): point = 36
   Insn 20(l0): point = 38
   Insn 18(l0): point = 40
   Insn 19(l0): point = 42
   Insn 17(l0): point = 44
   Insn 16(l0): point = 46
   Insn 15(l0): point = 48
   Insn 4(l0): point = 50
   Insn 84(l0): point = 52
   Insn 14(l0): point = 54
   Insn 13(l0): point = 56
   Insn 11(l0): point = 58
   Insn 3(l0): point = 60
   Insn 47(l1): point = 63
   Insn 46(l1): point = 65
   Insn 43(l1): point = 67
   Insn 42(l1): point = 69
   Insn 45(l1): point = 71
   Insn 41(l1): point = 73
   Insn 82(l1): point = 75
   Insn 39(l1): point = 77
   Insn 38(l1): point = 79
   Insn 35(l1): point = 81
   Insn 34(l1): point = 83
 a0(r112): [11..12]
 a1(r116): [10..10]
 a2(r117): [10..10]
 a3(r97): [15..15]
 a4(r94): [15..17]
 a5(r95): [15..19]
 a6(r103): [15..44]
 a7(r107): [25..26]
 a8(r113): [45..46]
 a9(r99): [51..52]
 a10(r115): [50..50]
 a11(r118): [53..60]
 a12(r102): [55..58]
 a13(r94): [63..85]
 a14(r95): [63..85]
 a15(r97): [82..85] [63..67]
 a16(r103): [63..85]
 a17(r110): [66..71]
 a18(r93): [68..83]
 Rebuilding regno allocno list for 110
      Moving ranges of a16r103 to a6r103:  [63..85]
      Moving ranges of a15r97 to a3r97:  [82..85] [63..67]
      Moving ranges of a14r95 to a5r95:  [63..85]
      Moving ranges of a13r94 to a4r94:  [63..85]
 Rebuilding regno allocno list for 93
Compressing live ranges: from 86 to 20 - 23%
Ranges after the compression:
 a0(r112): [1..2]
 a1(r116): [0..0]
 a2(r117): [0..0]
 a3(r97): [18..19] [14..15] [3..3]
 a4(r94): [14..19] [3..4]
 a5(r95): [14..19] [3..4]
 a6(r103): [14..19] [3..6]
 a7(r107): [5..6]
 a8(r113): [7..8]
 a9(r99): [10..11]
 a10(r115): [9..9]
 a11(r118): [12..13]
 a12(r102): [12..13]
 a17(r110): [14..17]
 a18(r93): [16..19]
+++Allocating 112 bytes for conflict table (uncompressed size 152)
;; a0(r112,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r116,l0) conflicts: a2(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r117,l0) conflicts: a1(r116,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r97,l0) conflicts: a4(r94,l0) a5(r95,l0) a6(r103,l0) a17(r110,l0) a18(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r94,l0) conflicts: a3(r97,l0) a5(r95,l0) a6(r103,l0) a17(r110,l0) a18(r93,l0)
;;     total conflict hard regs: 0-1 16-17 30
;;     conflict hard regs: 0-1 16-17 30

;; a5(r95,l0) conflicts: a3(r97,l0) a4(r94,l0) a6(r103,l0) a17(r110,l0) a18(r93,l0)
;;     total conflict hard regs: 0-2 16-17 30
;;     conflict hard regs: 0-2 16-17 30

;; a6(r103,l0) conflicts: a3(r97,l0) a4(r94,l0) a5(r95,l0) a7(r107,l0) a17(r110,l0) a18(r93,l0)
;;     total conflict hard regs: 0 2 16-17 30
;;     conflict hard regs: 0 2 16-17 30

;; a7(r107,l0) conflicts: a6(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r113,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r99,l0) conflicts:
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a10(r115,l0) conflicts:
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a11(r118,l0) conflicts: a12(r102,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a12(r102,l0) conflicts: a11(r118,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a17(r110,l0) conflicts: a3(r97,l0) a4(r94,l0) a5(r95,l0) a6(r103,l0) a18(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r93,l0) conflicts: a3(r97,l0) a4(r94,l0) a5(r95,l0) a6(r103,l0) a17(r110,l0)
;;     total conflict hard regs: 0-2 16-17 30
;;     conflict hard regs: 0-2 16-17 30


  cp0:a9(r99)<->a11(r118)@110:move
  cp1:a6(r103)<->a8(r113)@13:shuffle
  pref0:a6(r103)<-hr1@1110
  pref2:a4(r94)<-hr2@890
  pref4:a12(r102)<-hr0@13
  regions=2, blocks=8, points=20
    allocnos=19 (big 0), copies=2, conflicts=0, ranges=20

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r112 1r116 2r117 3r97 4r94 5r95 6r103 7r107 8r113 9r99 10r115 11r118 12r102 17r110 18r93
    modified regnos: 93 94 95 97 99 102 103 107 110 112 113 115 116 117 118
    border:
    Pressure: GENERAL_REGS=10
 Removing pref0:hr1@1110
    Hard reg set forest:
      0:( 0-28 30 32-63)@0
        1:( 0-28 30)@20296
          2:( 0 2-28 30)@1786
            3:( 2-28 30)@4400
              4:( 2-15 18-28)@27476
                5:( 3-15 18-28)@37152
                  6:( 19-28)@7540
      Allocno a0r112 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a1r116 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a2r117 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a3r97 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a4r94 of GENERAL_REGS(30) has 25 avail. regs  2-15 18-28, node:  2-15 18-28 (confl regs =  0-1 16-17 29-85)
      Allocno a5r95 of GENERAL_REGS(30) has 24 avail. regs  3-15 18-28, node:  3-15 18-28 (confl regs =  0-2 16-17 29-85)
      Allocno a6r103 of GENERAL_REGS(30) has 10 avail. regs  19-28, node:  19-28 (confl regs =  0 2 16-17 29-85)
      Allocno a7r107 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a8r113 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a9r99 of GENERAL_REGS(30) has 28 avail. regs  2-28 30, node:  2-28 30 (confl regs =  0-1 29 31-85)
      Allocno a10r115 of GENERAL_REGS(30) has 28 avail. regs  2-28 30, node:  2-28 30 (confl regs =  0-1 29 31-85)
      Allocno a11r118 of GENERAL_REGS(30) has 28 avail. regs  2-28 30, node:  2-28 30 (confl regs =  0-1 29 31-85)
      Allocno a12r102 of GENERAL_REGS(30) has 29 avail. regs  0 2-28 30, node:  0 2-28 30 (confl regs =  1 29 31-85)
      Allocno a17r110 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a18r93 of GENERAL_REGS(30) has 24 avail. regs  3-15 18-28, node:  3-15 18-28 (confl regs =  0-2 16-17 29-85)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a9r99-a11r118 (freq=110):
          Result (freq=440): a9r99(220) a11r118(220)
        Forming thread by copy 1:a6r103-a8r113 (freq=13):
          Result (freq=1440): a6r103(1220) a8r113(220)
      Pushing a10(r115,l0)(cost 0)
      Pushing a2(r117,l0)(cost 0)
      Pushing a1(r116,l0)(cost 0)
      Pushing a12(r102,l0)(cost 0)
      Pushing a7(r107,l0)(cost 0)
      Pushing a0(r112,l0)(cost 0)
      Pushing a9(r99,l0)(cost 0)
      Pushing a11(r118,l0)(cost 0)
      Pushing a8(r113,l0)(cost 0)
      Pushing a6(r103,l0)(cost 0)
      Pushing a18(r93,l0)(cost 0)
      Pushing a17(r110,l0)(cost 0)
      Pushing a3(r97,l0)(cost 0)
      Pushing a5(r95,l0)(cost 0)
      Pushing a4(r94,l0)(cost 0)
      Popping a4(r94,l0)  --         assign reg 19
      Popping a5(r95,l0)  --         assign reg 20
      Popping a3(r97,l0)  --         assign reg 0
      Popping a17(r110,l0)  --         assign reg 1
      Popping a18(r93,l0)  --         assign reg 21
      Popping a6(r103,l0)  --         assign reg 22
      Popping a8(r113,l0)  --         assign reg 22
      Popping a11(r118,l0)  --         assign reg 2
      Popping a9(r99,l0)  --         assign reg 2
      Popping a0(r112,l0)  --         assign reg 0
      Popping a7(r107,l0)  --         assign reg 0
      Popping a12(r102,l0)  --         assign reg 0
      Popping a1(r116,l0)  --         assign reg 0
      Popping a2(r117,l0)  --         assign reg 1
      Popping a10(r115,l0)  --         assign reg 2
Disposition:
   18:r93  l0    21    4:r94  l0    19    5:r95  l0    20    3:r97  l0     0
    9:r99  l0     2   12:r102 l0     0    6:r103 l0    22    7:r107 l0     0
   17:r110 l0     1    0:r112 l0     0    8:r113 l0    22   10:r115 l0     2
    1:r116 l0     0    2:r117 l0     1   11:r118 l0     2
New iteration of spill/restore move
+++Costs: overall 1987, reg 1987, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap] 68 [p0] 69 [p1] 70 [p2] 71 [p3]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 2 [x2] 16 [x16] 17 [x17] 30 [x30] 31 [sp] 66 [cc]
;;  ref usage 	r0={11d,6u} r1={10d,4u} r2={9d,3u} r3={6d} r4={6d} r5={6d} r6={6d} r7={6d} r8={6d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={10d} r17={10d} r18={5d} r29={1d,7u} r30={6d} r31={1d,12u} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,12u,2e} r65={1d,6u} r66={8d,3u} r67={5d} r68={6d} r69={6d} r70={6d} r71={6d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r93={1d,1u} r94={2d,3u} r95={2d,3u} r97={2d,1u} r99={1d,1u} r102={1d,1u} r103={1d,3u} r107={1d,1u} r110={1d,1u} r112={1d,1u} r113={1d,1u} r115={1d} r116={1d} r117={1d} r118={1d,1u} 
;;    total ref usage 462{389d,71u,2e} in 40{35 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 2 12 2 NOTE_INSN_DELETED)
(note 12 10 3 2 NOTE_INSN_DELETED)
(insn 3 12 11 2 (set (reg/f:DI 118 [99])
        (const:DI (unspec:DI [
                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x7749fe9ccb40 __stack_chk_guard>)
                    (const_int 0 [0])
                ] UNSPEC_SALT_ADDR))) "fib.c":7:12 65 {*movdi_aarch64}
     (expr_list:REG_EQUIV (const:DI (unspec:DI [
                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x7749fe9ccb40 __stack_chk_guard>)
                    (const_int 0 [0])
                ] UNSPEC_SALT_ADDR))
        (nil)))
(insn 11 3 13 2 (set (reg/f:DI 102)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>))) "fib.c":12:5 65 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>))
        (nil)))
(insn 13 11 14 2 (set (reg:DI 1 x1)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -12 [0xfffffffffffffff4]))) "fib.c":12:5 157 {*adddi3_aarch64}
     (nil))
(insn 14 13 84 2 (set (reg:DI 0 x0)
        (lo_sum:DI (reg/f:DI 102)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>))) "fib.c":12:5 1116 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7749fe9ccbd0 *.LC0>)
            (nil))))
(insn 84 14 4 2 (set (reg/f:DI 99)
        (reg/f:DI 118 [99])) "fib.c":7:12 65 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 118 [99])
        (nil)))
(insn 4 84 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.5063+0 S8 A64])
                (unspec:DI [
                        (mem:DI (reg/f:DI 99) [0  S8 A8])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 115)
                (const_int 0 [0]))
        ]) "fib.c":7:12 1162 {stack_protect_set_di}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_UNUSED (reg:DI 115)
            (nil))))
(call_insn 15 4 16 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7749feb2b000 scanf>) [0 __builtin_scanf S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "fib.c":12:5 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7749feb2b000 scanf>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 16 15 17 2 (set (reg/f:DI 113)
        (high:DI (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))
        (nil)))
(insn 17 16 19 2 (set (reg/f:DI 103)
        (lo_sum:DI (reg/f:DI 113)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>))) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 1116 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
            (nil))))
(insn 19 17 18 2 (set (reg:DI 1 x1)
        (reg/f:DI 103)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
(insn 18 19 20 2 (set (reg:SI 2 x2)
        (const_int 0 [0])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(insn 20 18 21 2 (set (reg:SI 0 x0)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(call_insn 21 20 24 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 24 21 25 2 (set (reg:SI 2 x2)
        (const_int 1 [0x1])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(insn 25 24 26 2 (set (reg:DI 1 x1)
        (reg/f:DI 103)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 0 x0)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(call_insn 27 26 30 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 30 27 31 2 (set (reg:SI 107 [ n ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "fib.c":15:14 64 {*movsi_aarch64}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
        (nil)))
(insn 31 30 32 2 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 107 [ n ])
            (const_int 1 [0x1]))) "fib.c":15:14 441 {cmpsi}
     (expr_list:REG_DEAD (reg:SI 107 [ n ])
        (nil)))
(jump_insn 32 31 63 2 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "fib.c":15:14 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 48)
(note 63 32 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 63 6 3 (set (reg/v:SI 95 [ i ])
        (const_int 1 [0x1])) "fib.c":11:7 64 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 7 3 (set (reg/v:SI 94 [ b ])
        (reg/v:SI 95 [ i ])) "fib.c":10:7 64 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 44 3 (set (reg/v:SI 97 [ a ])
        (const_int 0 [0])) "fib.c":9:7 64 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 44 7 33 4 3 (nil) [1 uses])
(note 33 44 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg/v:SI 93 [ b ])
        (reg/v:SI 94 [ b ])) 64 {*movsi_aarch64}
     (nil))
(insn 35 34 38 4 (set (reg/v:SI 94 [ b ])
        (plus:SI (reg/v:SI 94 [ b ])
            (reg/v:SI 97 [ a ]))) "fib.c":17:11 156 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 97 [ a ])
        (nil)))
(insn 38 35 39 4 (set (reg:SI 2 x2)
        (reg/v:SI 94 [ b ])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(insn 39 38 82 4 (set (reg:DI 1 x1)
        (reg/f:DI 103)) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 65 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7749fe9ccc60 *.LC1>)
        (nil)))
(insn 82 39 41 4 (set (reg:SI 0 x0)
        (const_int 2 [0x2])) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 64 {*movsi_aarch64}
     (nil))
(call_insn 41 82 45 4 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>) [0 __builtin___printf_chk S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/aarch64-linux-gnu/include/bits/stdio2.h":86:10 59 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7749feb54200 __printf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 45 41 42 4 (set (reg:SI 110 [ n ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "fib.c":15:14 64 {*movsi_aarch64}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
        (nil)))
(insn 42 45 43 4 (set (reg/v:SI 95 [ i ])
        (plus:SI (reg/v:SI 95 [ i ])
            (const_int 1 [0x1]))) "fib.c":20:11 156 {*addsi3_aarch64}
     (nil))
(insn 43 42 46 4 (set (reg/v:SI 97 [ a ])
        (reg/v:SI 93 [ b ])) 64 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 93 [ b ])
        (nil)))
(insn 46 43 47 4 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 110 [ n ])
            (reg/v:SI 95 [ i ]))) "fib.c":15:14 441 {cmpsi}
     (expr_list:REG_DEAD (reg:SI 110 [ n ])
        (nil)))
(jump_insn 47 46 48 4 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) "fib.c":15:14 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 44)
(code_label 48 47 49 5 2 (nil) [1 uses])
(note 49 48 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 49 55 5 (set (reg/f:DI 112)
        (const:DI (unspec:DI [
                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x7749fe9ccb40 __stack_chk_guard>)
                    (const_int 1 [0x1])
                ] UNSPEC_SALT_ADDR))) "fib.c":23:1 65 {*movdi_aarch64}
     (expr_list:REG_EQUIV (const:DI (unspec:DI [
                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x7749fe9ccb40 __stack_chk_guard>)
                    (const_int 1 [0x1])
                ] UNSPEC_SALT_ADDR))
        (nil)))
(insn 55 54 56 5 (parallel [
            (set (reg:CC 66 cc)
                (unspec:CC [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.5063+0 S8 A64])
                        (mem:DI (reg/f:DI 112) [0  S8 A8])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 116))
            (clobber (reg:DI 117))
        ]) "fib.c":23:1 1164 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (expr_list:REG_UNUSED (reg:DI 117)
            (expr_list:REG_UNUSED (reg:DI 116)
                (nil)))))
(jump_insn 56 55 64 5 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "fib.c":23:1 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 59)
(note 64 56 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 57 64 58 6 (parallel [
            (call (mem:DI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7749fe9c8e00 __stack_chk_fail>) [0 __stack_chk_fail S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "fib.c":23:1 58 {*call_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7749fe9c8e00 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(barrier 58 57 59)
(code_label 59 58 65 7 4 (nil) [1 uses])
(note 65 59 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 65 61 7 (set (reg/i:SI 0 x0)
        (const_int 0 [0])) "fib.c":23:1 64 {*movsi_aarch64}
     (nil))
(insn 61 60 83 7 (use (reg/i:SI 0 x0)) "fib.c":23:1 -1
     (nil))
(note 83 61 0 NOTE_INSN_DELETED)
